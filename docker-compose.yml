services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: codemetrics_postgres
    environment:
      POSTGRES_USER: codemetrics
      POSTGRES_PASSWORD: password
      POSTGRES_DB: codemetrics
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U codemetrics"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: codemetrics_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Application
  api:
    build: .
    container_name: codemetrics_api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://codemetrics:password@postgres:5432/codemetrics
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    env_file:
      - .env
    dns:
      - 8.8.8.8
      - 8.8.4.4
      - 1.1.1.1
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
    command: uvicorn src.api.main:app --host 0.0.0.0 --port 8000 --reload

  # Celery Worker (для фоновых задач)
  celery_worker:
    build: .
    container_name: codemetrics_celery
    environment:
      - DATABASE_URL=postgresql+asyncpg://codemetrics:password@postgres:5432/codemetrics
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    env_file:
      - .env
    dns:
      - 8.8.8.8
      - 8.8.4.4
      - 1.1.1.1
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
    command: celery -A src.tasks.celery_app worker --loglevel=info

volumes:
  postgres_data:
  redis_data:
